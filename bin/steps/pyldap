# Install pyldap
puts-step "Installing pyldap"

GROFF_VERSION=1.21
GROFF_URL=ftp://ftp.gnu.org/gnu/groff/groff-${GROFF_VERSION}.tar.gz

BERKLEY_DB_VERSION=5.3.15
BERKLEY_DB_URL=http://download.oracle.com/berkeley-db/db-${BERKLEY_DB_VERSION}.NC.tar.gz

OPENLDAP_VERSION=2.4.40
OPENLDAP_URL=http://www.openldap.org/software/download/OpenLDAP/openldap-release/openldap-${OPENLDAP_VERSION}.tgz

mkdir -p $CACHE_DIR/.pyldap
mkdir -p $BUILD_DIR/.pyldap

if [ ! -d $CACHE_DIR/.pyldap/lib-groff ]; then
    echo "Downloading Groff ${GROFF_VERSION} ..." | indent
    curl -s -L -o groff.tar.gz $GROFF_URL
    echo "Unpacking ..." | indent
    tar -zxvf groff.tar.gz > /dev/null
    rm groff.tar.gz
    mv groff-${GROFF_VERSION} $CACHE_DIR/.pyldap/groff
    echo "Configuring ..." | indent
    cd $CACHE_DIR/.pyldap/groff
    ./configure --prefix=$CACHE_DIR/.pyldap/lib-groff > /dev/null
    echo "Compiling ..." | indent
    make PROCESSEDEXAMPLEFILES="" > /dev/null
    echo "Installing ..." | indent
    make PROCESSEDEXAMPLEFILES="" install > /dev/null
    cd - > /dev/null
fi
cp -R $CACHE_DIR/.pyldap/lib-groff $BUILD_DIR/.pyldap/lib-groff
export PATH=${BUILD_DIR}/.pyldap/lib-groff/bin:${PATH}
echo "Groff enabled." | indent


if [ ! -d $CACHE_DIR/.pyldap/lib-berkleydb ]; then
    echo "Downloading BerkleyDB ${BERKLEY_DB_VERSION} ..." | indent
    curl -s -L -o berkleydb.tar.gz $BERKLEY_DB_URL
    echo "Unpacking ..." | indent
    tar -zxvf berkleydb.tar.gz > /dev/null
    rm berkleydb.tar.gz
    mv db-${BERKLEY_DB_VERSION}.NC $CACHE_DIR/.pyldap/berkleydb
    echo "Configuring ..." | indent
    cd $CACHE_DIR/.pyldap/berkleydb/build_unix
    ../dist/configure --prefix=$CACHE_DIR/.pyldap/lib-berkleydb > /dev/null
    echo "Compiling ..." | indent
    make > /dev/null
    echo "Installing ..." | indent
    make install > /dev/null
    cd - > /dev/null
fi
cp -R $CACHE_DIR/.pyldap/lib-berkleydb $BUILD_DIR/.pyldap/lib-berkleydb
export LD_LIBRARY_PATH="$BUILD_DIR/.pyldap/lib-berkleydb/lib:${LD_LIBRARY_PATH}"
echo "BerkleyDB enabled." | indent


if [ ! -d $CACHE_DIR/.pyldap/lib-openldap ]; then
    echo "Downloading Open LDAP ${OPENLDAP_VERSION} ..." | indent
    curl -s -L -o openldap.tgz $OPENLDAP_URL
    echo "Unpacking ..." | indent
    tar -zxvf openldap.tgz > /dev/null
    rm openldap.tgz
    mv openldap-${OPENLDAP_VERSION} $CACHE_DIR/.pyldap/openldap
    echo "Configuring ..." | indent
    cd $CACHE_DIR/.pyldap/openldap
    LDFLAGS="-L$BUILD_DIR/.pyldap/lib-berkleydb/lib ${LDFLAGS}" CPPFLAGS="-I$BUILD_DIR/.pyldap/lib-berkleydb/include ${CPPFLAGS}" ./configure --enable-bdb --enable-crypt --with-tls=openssl --prefix=$CACHE_DIR/.pyldap/lib-openldap > /dev/null
    echo "Compiling ..." | indent
    make depend > /dev/null
    make > /dev/null
    echo "Installing ..." | indent
    make install > /dev/null
    cd - > /dev/null
fi
cp -R $CACHE_DIR/.pyldap/lib-openldap $BUILD_DIR/.pyldap/lib-openldap
echo "Open LDAP enabled." | indent

echo "Installing pyldap ..." | indent
PYTHON_LDAP_VERSION=`cat requirements.txt | grep pyldap | awk -F '=' '{ print $3 }'`

mkdir tmpdir
if [ -n "$PYTHON_LDAP_VERSION" ]; then
    pip install -d tmpdir pyldap==${PYTHON_LDAP_VERSION}
else
    pip install -d tmpdir pyldap
    PYTHON_LDAP_VERSION=`ls tmpdir | grep pyldap | sed 's/pyldap-\(.*\)\.tar\.gz/\1/g'`
fi

cd tmpdir
tar -zxvf pyldap-${PYTHON_LDAP_VERSION}.tar.gz > /dev/null
cd pyldap-${PYTHON_LDAP_VERSION}
sed "s,library_dirs = \(.*\),library_dirs = $BUILD_DIR/.pyldap/lib-openldap/lib \1,g" setup.cfg > setup.cfg
sed "s,include_dirs = \(.*\),include_dirs = $BUILD_DIR/.pyldap/lib-openldap/include \1,g" setup.cfg > setup.cfg
pip install .
cd ../..
rm -rf tmpdir


